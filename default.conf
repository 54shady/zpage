server {
    # ngx_http_auth_basic_module
	#auth_basic "Restricted site";
	#auth_basic_user_file /tmp/htpasswd;

    listen       80;
    listen  [::]:80;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

	# http://serverip/
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

	# http://serverip/spice
	location /spice {
		alias /spice;
		index index.html index.htm spice.html;
	}

	# http://serverip/qdoc
	location /qdoc {
		alias /qemu;
		index index.html index.htm;
	}

	location /golden {
		alias /golden;
		autoindex on;
		charset utf-8; # support chinese file name
		autoindex_exact_size off;
	}

	location /iso {
		alias /iso;
		autoindex on;
		charset utf-8; # support chinese file name
		autoindex_exact_size off;
	}

	# http://serverip/kdoc
	location /kdoc {
		alias /kernel;
		index index.html index.htm;
	}

	location /vdoc {
		alias /vdoc;
		index index.html index.htm;
	}

	location /winapp {
		alias /winapp;
		autoindex on;
		charset utf-8; # support chinese file name
		autoindex_exact_size off;
	}

	location /zdoc {
		alias /zdoc;
		index README.html;
		autoindex on;
		charset utf-8; # support chinese file name
		autoindex_exact_size off;
	}

	location /dfc {
		alias /dfc;
		autoindex on;

		# nginx determines the content type from the extension.
		# If the file has no extension, it will use the default_type
		types { }
		#default_type text/html;
		default_type text/plain;

		charset utf-8; # support chinese file name
		autoindex_exact_size off;
	}

	location /script {
		alias /script;
		index README.html;
		autoindex on;
		charset utf-8; # support chinese file name
		autoindex_exact_size off;

		# show log content instead of download
		types {
			# map extension .log to mime-type text/plan
			text/plain log;
		}
	}

	location /pdf {
		# http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html
		# need auth under this entry
		auth_basic "Restricted site";
		auth_basic_user_file /tmp/htpasswd;
		# the passwd file format like below:
		# username:EncodeStringHere:[commment]
		# echo -n 'username:' >> /tmp/htpasswd
		# using openssl to encode the passwd rather then plane text via `openssl passwd >> /tmp/htpasswd`
		# echo "passwd-goes-here" | openssl passwd -stdin >> /tmp/htpasswd

		alias /pdf;
		autoindex on;
		charset utf-8; # support chinese file name
		autoindex_exact_size off;
	}

	location /video {
		alias /video;
		autoindex on;
		charset utf-8; # support chinese file name
		autoindex_exact_size off;
	}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
